{"version":3,"sources":["Components/Home.tsx","Components/VillageProfile/Forms/GharKoBiabarn.tsx","Components/VillageProfile/AddNewData.tsx","Components/VillageProfile/PendingData.tsx","Components/VillageProfileHome.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["Home","className","to","GharKoBiabarn","type","value","name","AddNewData","props","data","PendingData","VillageProfileHome","App","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"iLAGe,SAASA,IACtB,OACE,qBAAKC,UAAU,OAAf,SACE,gCACE,sBAAKA,UAAU,QAAf,UACE,qJACA,qLAEF,cAAC,IAAD,CAAMC,GAAG,MAAT,sCCTO,SAASC,IACtB,OACE,sBAAKF,UAAU,UAAf,UACE,sBAAKA,UAAU,aAAf,UACE,uBAAOA,UAAU,QAAjB,wBACA,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,QAAf,SACE,kCACE,uBAAOG,KAAK,QAAQC,MAAM,IAAIC,KAAK,YADrC,eAIF,qBAAKL,UAAU,QAAf,SACE,kCACE,uBAAOG,KAAK,QAAQC,MAAM,IAAIC,KAAK,YADrC,eAIF,qBAAKL,UAAU,QAAf,SACE,kCACE,uBAAOG,KAAK,QAAQC,MAAM,IAAIC,KAAK,YADrC,eAIF,qBAAKL,UAAU,QAAf,SACE,kCACE,uBAAOG,KAAK,QAAQC,MAAM,IAAIC,KAAK,YADrC,eAIF,qBAAKL,UAAU,QAAf,SACE,kCACE,uBAAOG,KAAK,QAAQC,MAAM,IAAIC,KAAK,YADrC,eAIF,qBAAKL,UAAU,QAAf,SACE,kCACE,uBAAOG,KAAK,QAAQC,MAAM,IAAIC,KAAK,YADrC,eAIF,qBAAKL,UAAU,QAAf,SACE,kCACE,uBAAOG,KAAK,QAAQC,MAAM,IAAIC,KAAK,YADrC,eAIF,qBAAKL,UAAU,QAAf,SACE,kCACE,uBAAOG,KAAK,QAAQC,MAAM,IAAIC,KAAK,YADrC,eAIF,qBAAKL,UAAU,QAAf,SACE,kCACE,uBAAOG,KAAK,QAAQC,MAAM,IAAIC,KAAK,YADrC,qBAMN,sBAAKL,UAAU,aAAf,UACE,uBAAOA,UAAU,QAAjB,8BACA,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,QAAf,SACE,kCACE,uBAAOG,KAAK,QAAQC,MAAM,IAAIC,KAAK,YADrC,eAIF,qBAAKL,UAAU,QAAf,SACE,kCACE,uBAAOG,KAAK,QAAQC,MAAM,IAAIC,KAAK,YADrC,eAIF,qBAAKL,UAAU,QAAf,SACE,kCACE,uBAAOG,KAAK,QAAQC,MAAM,IAAIC,KAAK,YADrC,wBClEG,SAASC,EAAWC,GAClBA,EAATC,KACN,OACE,qBAAKR,UAAU,kBAAf,SACE,cAACE,EAAD,MCLS,SAASO,IACpB,OACI,oDCDO,SAASC,IACpB,OACI,sBAAKV,UAAU,UAAf,UACI,cAAC,IAAD,CAAMC,GAAG,cAAT,+BACA,cAAC,IAAD,CAAMA,GAAG,cAAT,6B,MCCG,SAASU,IACtB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,cAAZ,SACE,cAACN,EAAD,MAEF,cAAC,IAAD,CAAOM,KAAK,cAAZ,SACE,cAACH,EAAD,MAEF,cAAC,IAAD,CAAOG,KAAK,MAAZ,SACE,cAACF,EAAD,MAEF,cAAC,IAAD,CAAOE,KAAK,IAAZ,SACE,cAACb,EAAD,WCVV,IAAMc,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DA0CnC,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,+GAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MC9FjEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDgBnB,SAAkBtB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIsB,IAAIC,UAAwB9B,OAAOC,SAAS8B,MACpDC,SAAWhC,OAAOC,SAAS+B,OAIvC,OAGFhC,OAAOiC,iBAAiB,QAAQ,WAC9B,IAAM5B,EAAK,UAAMyB,UAAN,sBAEPhC,IAgEV,SAAiCO,EAAeC,GAE9C4B,MAAM7B,EAAO,CACX8B,QAAS,CAAE,iBAAkB,YAE5BzB,MAAK,SAAC0B,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CjC,UAAUC,cAAciC,MAAM/B,MAAK,SAACC,GAClCA,EAAa+B,aAAahC,MAAK,WAC7BV,OAAOC,SAAS0C,eAKpBvC,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IAAI,oEAtFVyB,CAAwBvC,EAAOC,GAI/BC,UAAUC,cAAciC,MAAM/B,MAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,OCtC/BuC,K","file":"static/js/main.f3532197.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Home() {\n  return (\n    <div className=\"home\">\n      <div>\n        <div className=\"title\">\n          <h3>खाँडादेवी गाउँपालिका</h3>\n          <p>माकादुम , रामेछाप, प्रदेश नं ३</p>\n        </div>\n        <Link to=\"/vp\">Village Profile App</Link>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function GharKoBiabarn() {\n  return (\n    <div className=\"vp-form\">\n      <div className=\"form-group\">\n        <label className=\"label\">1. Ward No</label>\n        <div className=\"options-verical\">\n          <div className=\"radio\">\n            <label>\n              <input type=\"radio\" value=\"1\" name=\"ward_no\" /> Ward 1\n            </label>\n          </div>\n          <div className=\"radio\">\n            <label>\n              <input type=\"radio\" value=\"2\" name=\"ward_no\" /> Ward 2\n            </label>\n          </div>\n          <div className=\"radio\">\n            <label>\n              <input type=\"radio\" value=\"3\" name=\"ward_no\" /> Ward 3\n            </label>\n          </div>\n          <div className=\"radio\">\n            <label>\n              <input type=\"radio\" value=\"3\" name=\"ward_no\" /> Ward 3\n            </label>\n          </div>\n          <div className=\"radio\">\n            <label>\n              <input type=\"radio\" value=\"3\" name=\"ward_no\" /> Ward 3\n            </label>\n          </div>\n          <div className=\"radio\">\n            <label>\n              <input type=\"radio\" value=\"3\" name=\"ward_no\" /> Ward 3\n            </label>\n          </div>\n          <div className=\"radio\">\n            <label>\n              <input type=\"radio\" value=\"3\" name=\"ward_no\" /> Ward 3\n            </label>\n          </div>\n          <div className=\"radio\">\n            <label>\n              <input type=\"radio\" value=\"3\" name=\"ward_no\" /> Ward 3\n            </label>\n          </div>\n          <div className=\"radio\">\n            <label>\n              <input type=\"radio\" value=\"3\" name=\"ward_no\" /> Ward 3\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"label\">2. Basti ko Naam</label>\n        <div className=\"options-verical\">\n          <div className=\"radio\">\n            <label>\n              <input type=\"radio\" value=\"1\" name=\"ward_no\" /> Ward 1\n            </label>\n          </div>\n          <div className=\"radio\">\n            <label>\n              <input type=\"radio\" value=\"2\" name=\"ward_no\" /> Ward 2\n            </label>\n          </div>\n          <div className=\"radio\">\n            <label>\n              <input type=\"radio\" value=\"3\" name=\"ward_no\" /> Ward 3\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport GharKoBiabarn from \"./Forms/GharKoBiabarn\";\n\nexport default function AddNewData(props: any) {\n  let { data } = props;\n  return (\n    <div className=\"vp-form-wrapper\">\n      <GharKoBiabarn />\n    </div>\n  );\n}\n","import React from 'react'\n\nexport default function PendingData() {\n    return (\n        <div>\n            Pending Data Here\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function VillageProfileHome() {\n    return (\n        <div className=\"vp-home\">\n            <Link to=\"/vp/add-new\">Add New Household</Link>\n            <Link to=\"/vp/pending\">Pending Data</Link>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport AddNewData from \"./Components/VillageProfile/AddNewData\";\nimport PendingData from \"./Components/VillageProfile/PendingData\";\nimport VillageProfileHome from \"./Components/VillageProfileHome\";\nimport \"./App.css\"\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/vp/add-new\">\n          <AddNewData />\n        </Route>\n        <Route path=\"/vp/pending\">\n          <PendingData />\n        </Route>\n        <Route path=\"/vp\">\n          <VillageProfileHome />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n"],"sourceRoot":""}