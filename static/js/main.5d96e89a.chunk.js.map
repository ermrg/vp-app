{"version":3,"sources":["Components/Home.tsx","Api/api.ts","db/models/CollectorModel.ts","db/models/WardModel.ts","db/seed.ts","db/db.ts","db/models/BastiModel.ts","Components/VillageProfile/Forms/GharKoBiabarn.tsx","Components/VillageProfile/AddNewData.tsx","Components/VillageProfile/PendingData.tsx","Components/VillageProfileHome.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["Home","className","to","server","api","loadCollectors","axios","get","loadWada","loadMarga","loadBasti","Collector","name","phone","password","id","this","db","collectors","mapToClass","put","addNewCollector","data","a","transaction","add","getAllcollector","toArray","collector","getCollectorByPhone","where","startsWithAnyOfIgnoreCase","getCollectorByPhoneAndPassword","first","Ward","status","wards","addNewWard","ward","console","log","getAllWards","getWardByName","getCollectors","res","map","w","length","getWadas","getBastis","basti","getBastiByName","addNewBasti","wardId","ward_id","syncDb","window","navigator","onLine","users","bastis","version","stores","open","then","catch","err","Dexie","Basti","getBastiByWardId","parseInt","GharKoBiabarn","props","useState","setWards","setBastis","useEffect","loadAllWada","loadBastiByWadaId","e","target","value","checkRequired","requiredFields","indexOf","onChange","key","type","b","AddNewData","PendingData","cookies","Cookies","initialAuth","VillageProfileHome","auth","setAuth","loading","setLoading","error","setError","checkInCookies","loadAllCollectors","handleValueChance","persist","handleSubmit","preventDefault","setInCookies","colelctor","set","onClick","remove","method","onSubmit","placeholder","required","style","color","App","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5d96e89a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Home() {\n  return (\n    <div className=\"home\">\n      <div>\n        <div className=\"title\">\n          <h3>खाँडादेवी गाउँपालिका</h3>\n          <p>माकादुम , रामेछाप, प्रदेश नं ३</p>\n        </div>\n        <Link to=\"/vp-app/app\">Village Profile App</Link>\n      </div>\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nconst server = \"https://55c69b6640a7.ngrok.io/api/\";\nconst api = {\n  loadCollectors: () => axios.get(`${server}collectors/`),\n  loadWada: () => axios.get(`${server}wards/`),\n  loadMarga: () => axios.get(`${server}margas/`),\n  loadBasti: () => axios.get(`${server}bastis/`),\n};\n\nexport default api;\n","import { db } from \"../db\";\n\nexport interface ICollector {\n  id?: number;\n  name: string;\n  phone: string;\n  password: string;\n}\nexport class Collector {\n  id: number;\n  name: string;\n  phone: string;\n  password: string;\n\n  constructor(name: string, phone: string, password: string, id?: number) {\n    this.name = name;\n    this.phone = phone;\n    this.password = password;\n    if (id) this.id = id;\n    db.collectors.mapToClass(Collector);\n  }\n  save() {\n    return db.collectors.put(this);\n  }\n}\n\nexport async function addNewCollector(data: ICollector) {\n  await db.transaction(\"rw\", db.collectors, async function () {\n    await db.collectors.add(\n      new Collector(data.name, data.phone, data.password, data.id)\n    );\n  });\n}\n\nexport async function getAllcollector() {\n  return await db.transaction(\"r\", db.collectors, async function () {\n    let collector = await db.collectors.toArray();\n    return collector;\n  });\n}\n\nexport async function getCollectorById(id: number) {\n  return await db.collectors.get(id);\n}\n\nexport async function getCollectorByName(name: string) {\n  return await db.collectors\n    .where(\"name\")\n    .startsWithAnyOfIgnoreCase(name)\n    .toArray();\n}\n\nexport async function getCollectorByPhone(phone: string) {\n  return await db.collectors\n    .where(\"phone\")\n    .startsWithAnyOfIgnoreCase(phone)\n    .toArray();\n}\n\nexport async function getCollectorByPhoneAndPassword(\n  phone: string,\n  password: string\n) {\n  return await db.collectors\n    .where({ phone: phone, password: password }).first();\n}\n\nexport async function updateCollector(data: ICollector) {\n  return await db.collectors.put({\n    id: data.id,\n    name: data.name,\n    phone: data.phone,\n    password: data.password,\n  });\n}\n","import { db } from \"../db\";\n\nexport interface IWard {\n  id?: number;\n  name: string;\n  status: number;\n}\nexport class Ward {\n  id: number;\n  name: string;\n  status: number;\n\n  constructor(name: string, status: number, id?: number) {\n    this.name = name;\n    this.status = status;\n    if (id) this.id = id;\n    db.wards.mapToClass(Ward);\n  }\n  save() {\n    return db.wards.put(this);\n  }\n}\n\nexport async function addNewWard(data: IWard) {\n  await db.transaction(\"rw\", db.wards, async function () {\n    let ward = await db.wards.add(\n      new Ward(data.name, data.status, data.id)\n    );\n    console.log(ward);\n  });\n}\n\nexport async function getAllWards() {\n  return await db.transaction(\"r\", db.wards, async function () {\n    let wards = await db.wards.toArray();\n    return wards;\n  });\n}\n\nexport async function getWardById(id: number) {\n  return await db.wards.get(id);\n}\n\nexport async function getWardByName(name: string) {\n  return await db.wards.where('name').startsWithAnyOfIgnoreCase(name).toArray();\n}\n\nexport async function updateWard(data: IWard) {\n  return await db.wards.put({\n    id: data.id,\n    name: data.name,\n    status: data.status,\n  });\n}\n","import api from \"../Api/api\";\nimport { addNewBasti, getBastiByName } from \"./models/BastiModel\";\nimport { addNewCollector, getCollectorByPhone } from \"./models/CollectorModel\";\nimport { addNewWard, getWardByName } from \"./models/WardModel\";\n\nexport async function getCollectors() {\n  console.log(\"Synchronizing Collectors...\");\n  let res = await api.loadCollectors();\n  if (res.status === 200) {\n    let collectors = res.data;\n    collectors.map(async (w: any) => {\n      let checkCollector = await getCollectorByPhone(w.phone);\n      if (checkCollector.length === 0) {\n        await addNewCollector({ name: w.name, phone: w.phone, password: w.password, id: w.id });\n      }\n    });\n    console.log(collectors.length, \" Collectors Synced.\", collectors);\n  }\n}\n\nexport async function getWadas() {\n  console.log(\"Synchronizing Wards...\");\n  let res = await api.loadWada();\n  if (res.status === 200) {\n    let wards = res.data;\n    wards.map(async (w: any) => {\n      let checkWard = await getWardByName(w.name);\n      if (checkWard.length === 0) {\n        await addNewWard({ name: w.name, status: w.status, id: w.id });\n      }\n    });\n    console.log(wards.length, \" Wards Synced.\");\n  }\n}\n\nexport async function getBastis() {\n  console.log(\"Synchronizing Basti...\");\n  let res = await api.loadBasti();\n    if (res.status === 200) {\n      let basti = res.data;\n      basti.map(async (w: any) => {\n        let checkWard = await getBastiByName(w.name);\n        if (checkWard.length === 0) {\n          await addNewBasti({ name: w.name, status: w.status, id: w.id, wardId: w.ward_id });\n        }\n      });\n      console.log(basti.length , \" Bastis Synced.\")\n    }\n}\n\nexport async function syncDb() {\n  if (window.navigator.onLine) {\n    await getCollectors()\n    await getWadas();\n    await getBastis();\n  }\n}\n","import Dexie from \"dexie\";\nimport { IBasti } from \"./models/BastiModel\";\nimport { ICollector } from \"./models/CollectorModel\";\nimport { IUser } from \"./models/UserModel\";\nimport { IWard } from \"./models/WardModel\";\nimport { syncDb } from \"./seed\";\n\nexport class AppDatabase extends Dexie {\n  users: Dexie.Table<IUser>;\n  wards: Dexie.Table<IWard>;\n  bastis: Dexie.Table<IBasti>;\n  collectors: Dexie.Table<ICollector>;\n\n  constructor() {\n    super(\"VPDB\");\n\n    var db = this;\n    // db.delete()\n    //   .then(() => {\n    //     console.log(\"Database successfully deleted\");\n    //   })\n    //   .catch((err) => {\n    //     console.error(\"Could not delete database\");\n    //   })\n    //   .finally(() => {\n    //     // Do what should be done next...\n    //   });\n    db.version(1).stores({\n      users: \"++id, name, phone, password\",\n      wards: \"id, name, status\",\n      bastis: \"id, name, status, wardId\",\n      collectors: \"id, name, phone, password\",\n    });\n    db.open()\n      .then(async function (db) {\n        console.log(\"DB opened Succefully\");\n        await syncDb();\n        console.log(\"Sync Complete\");\n      })\n      .catch(function (err) {\n        console.log(\"DB error\", err);\n      });\n  }\n}\nexport var db = new AppDatabase();\n","import { db } from \"../db\";\n\nexport interface IBasti {\n  id?: number;\n  name: string;\n  status: number;\n  wardId: number;\n}\nexport class Basti {\n  id: number;\n  name: string;\n  status: number;\n  wardId: number;\n\n  constructor(name: string, status: number, wardId: number, id?: number) {\n    this.name = name;\n    this.status = status;\n    this.wardId = wardId;\n    if (id) this.id = id;\n    db.bastis.mapToClass(Basti);\n  }\n  save() {\n    return db.bastis.put(this);\n  }\n}\n\nexport async function addNewBasti(data: IBasti) {\n  await db.transaction(\"rw\", db.bastis, async function () {\n    await db.bastis.add(\n      new Basti(data.name, data.status, data.wardId, data.id)\n    );\n  });\n}\n\nexport async function getAllBasti() {\n  return await db.transaction(\"r\", db.bastis, async function () {\n    let bastis = await db.bastis.toArray();\n    return bastis;\n  });\n}\n\nexport async function getBastiById(id: number) {\n  return await db.bastis.get(id);\n}\n\nexport async function getBastiByName(name: string) {\n  return await db.bastis.where('name').startsWithAnyOfIgnoreCase(name).toArray();\n}\n\nexport async function getBastiByWardId(wardId: any) {\n  return await db.bastis.where({wardId: parseInt(wardId)}).toArray();\n}\n\nexport async function updateBasti(data: IBasti) {\n  return await db.bastis.put({\n    id: data.id,\n    name: data.name,\n    status: data.status,\n    wardId: data.wardId,\n  });\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  getAllBasti,\n  getBastiByWardId,\n  IBasti,\n} from \"../../../db/models/BastiModel\";\nimport { getAllWards, IWard } from \"../../../db/models/WardModel\";\n\nexport default function GharKoBiabarn(props: any) {\n  let { data } = props;\n  const [wards, setWards] = useState([] as IWard[]);\n  const [bastis, setBastis] = useState([] as IBasti[]);\n  useEffect(() => {\n    loadAllWada();\n  }, []);\n  async function loadAllWada() {\n    let wards = await getAllWards();\n    setWards([...wards]);\n  }\n  const loadBastiByWadaId = async (e: any) => {\n    let wardId = e.target.value;\n    let bastis = await getBastiByWardId(wardId);\n    setBastis([...bastis]);\n  };\n  const checkRequired = (id: number) => {\n    let requiredFields = data?.requiredFields || [];\n    return requiredFields.indexOf(id) > -1;\n  };\n  return (\n    <div className=\"vp-form\">\n      <div\n        className={`form-group ${data && checkRequired(1) ? \"required\" : \"\"}`}\n        id=\"1\"\n      >\n        <label className=\"label\">1. Ward No</label>\n        <div className=\"options-verical\" onChange={loadBastiByWadaId}>\n          {wards.map((w, key) => (\n            <div className=\"radio\" key={key}>\n              <label>\n                <input type=\"radio\" value={w.id} name=\"ward_no\" />\n                {w.name}\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className={`form-group ${data && checkRequired(2) ? \"required\" : \"\"}`} id=\"2\">\n        <label className=\"label\">2. Basti ko Naam</label>\n        <div className=\"options-verical\">\n          {bastis.map((b, key) => (\n            <div className=\"radio\" key={key}>\n              <label>\n                <input type=\"radio\" value={b.id} name=\"basti\" />\n                {b.name}\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport GharKoBiabarn from \"./Forms/GharKoBiabarn\";\nconst requiredFields = [1, 2]\nexport default function AddNewData(props: any) {\n  let { data } = props;\n  data.requiredFields = requiredFields\n  return (\n    <div className=\"vp-form-wrapper\">\n      <GharKoBiabarn data={data}/>\n    </div>\n  );\n}\n","import React from 'react'\n\nexport default function PendingData() {\n    return (\n        <div>\n            Pending Data Here\n        </div>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getAllcollector,\n  getCollectorByPhoneAndPassword,\n} from \"../db/models/CollectorModel\";\nimport Cookies from \"universal-cookie\";\nimport { IUser } from \"../db/models/UserModel\";\n\nconst cookies = new Cookies();\nconst initialAuth = {\n  name: \"\",\n  phone: \"\",\n  password: \"\",\n} as IUser;\nexport default function VillageProfileHome() {\n  const [auth, setAuth] = useState(initialAuth as IUser);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    checkInCookies();\n    loadAllCollectors()\n  }, []);\n  // async function syncDbWithServer() {\n  //   if (window.navigator.onLine) {\n  //     setLoading(true);\n  //     syncDb();\n  //     setLoading(false);\n  //   }\n  // }\n  // async function createUser(data: IUser) {\n  //   await addNewUser(data);\n  // }\n\n  // async function getUsers() {\n  //   let users = await getAllUsers();\n  //   console.log(users);\n  // }\n\n  // async function getById(id: number) {\n  //   let user = await getUserById(id);\n  //   console.log(user);\n  // }\n\n  // async function updateUserModel(data: IUser) {\n  //   let user = await updateUser(data);\n  //   console.log(user);\n  // }\n\n  async function loadAllCollectors() {\n    let wards = await getAllcollector();\n    console.log(wards);\n  }\n\n  const handleValueChance = (e: any) => {\n    e.persist();\n    setAuth((auth) => ({\n      ...auth,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    setLoading(true);\n    let collector = await getCollectorByPhoneAndPassword(\n      auth.phone,\n      auth.password\n    );\n    if (collector) {\n      setAuth((auth) => ({\n        ...auth,\n        id: collector?.id ? collector?.id : initialAuth.id,\n        name: collector?.name ? collector?.name : '',\n        phone: collector?.phone ? collector?.phone : initialAuth.phone,\n      }));\n      setInCookies(collector);\n    } else {\n      setError(\"Phone or Password did not match!\");\n    }\n    setLoading(false);\n  };\n\n  const checkInCookies = () => {\n    let auth = cookies.get(\"auth\");\n    if (auth) {\n      setAuth({ ...auth });\n    }\n  };\n  const setInCookies = (colelctor: IUser) => {\n    cookies.set(\"auth\", colelctor);\n  };\n  const clearCookies = () => {\n    cookies.remove(\"auth\");\n  };\n\n  const logout = () => {\n    setAuth({ ...initialAuth });\n    clearCookies();\n  };\n\n  if (loading) {\n    return <div className=\"vp-home\">Loading...</div>;\n  }\n  if (!auth.id) {\n    return (\n      <div className=\"vp-home\">\n        <form method=\"post\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Phone</label>\n            <input\n              type=\"number\"\n              placeholder=\"Phone No\"\n              name=\"phone\"\n              value={auth?.phone}\n              onChange={handleValueChance}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              value={auth?.password}\n              onChange={handleValueChance}\n              required\n            />\n          </div>\n          <p style={{ color: \"red\" }}>{error}</p>\n          <button>Submit</button>\n        </form>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"vp-home\">\n      <div className=\"welcome\">\n        Welcome <br />\n        {auth?.name}\n        <p className=\"logout\" onClick={logout}>Logout</p>\n      </div>\n      <Link to=\"/vp-app/app/add-new\">Add New Household</Link>\n      <Link to=\"/vp-app/app/pending\">Pending Data</Link>\n      <Link to=\"/vp-app/app/incomplete\">Incomplete Data</Link>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport AddNewData from \"./Components/VillageProfile/AddNewData\";\nimport PendingData from \"./Components/VillageProfile/PendingData\";\nimport VillageProfileHome from \"./Components/VillageProfileHome\";\nimport \"./App.css\"\nimport { db } from \"./db/db\";\n\nexport default function App() {\n  db.open();\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/vp-app/app/add-new\">\n          <AddNewData data={{}} />\n        </Route>\n        <Route path=\"/vp-app/app/pending\">\n          <PendingData />\n        </Route>\n        <Route path=\"/vp-app/app\">\n          <VillageProfileHome />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/vp-app\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n"],"sourceRoot":""}