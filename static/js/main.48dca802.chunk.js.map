{"version":3,"sources":["Components/Home.tsx","db/db.ts","db/models/BastiModel.ts","db/models/Household.ts","db/models/WardModel.ts","Components/VillageProfile/Forms/GharKoBiabarn.tsx","Components/VillageProfile/AddNewData.tsx","Api/api.ts","Components/VillageProfile/PendingData.tsx","db/seed.ts","Components/VillageProfileHome.tsx","Components/VillageProfile/AllData.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["Home","className","to","db","users","wards","bastis","households","version","stores","open","then","a","console","log","catch","err","Dexie","Basti","name","status","wardId","id","this","mapToClass","put","addNewBasti","data","transaction","add","getBastiByName","where","startsWithAnyOfIgnoreCase","toArray","getBastiByWardId","parseInt","Household","hoh_name","hoh","ward_id","basti_id","marga_id","religion","jaati","mother_tongue","main_occupation","has_bank_acc","has_cooperative_acc","has_garden","member_with_life_insurance","member_with_health_insurance","responder_name","house_num","num_of_member","resident_type","phone_num","mobile_num","longitude","latitude","geo_location","altitude","accuracy","responder_image","step","remarks","user_id","is_posted","addNewHousehold","getAllHousehold","getPendingHouseholds","equals","updateHousehold","Ward","addNewWard","ward","getAllWards","getWardByName","GharKoBiabarn","props","household","handleChange","checkRequired","requiredFields","indexOf","onChange","e","map","w","key","type","value","defaultChecked","b","cookies","Cookies","AddNewData","history","useHistory","auth","get","useState","setWards","setBastis","setHousehold","useEffect","loadAllWada","saveHousehold","push","loadBastiByWadaId","target","onClick","axios","defaults","xsrfHeaderName","xsrfCookieName","server","process","api","loadCollectors","loadWada","office_id","params","loadMarga","loadBasti","login","post","postHousehold","AllData","setHousholds","getHouseholds","hhs","hh","local_hh","length","getWadas","res","getBastis","basti","syncDb","window","navigator","onLine","initialAuth","username","phone","password","office_name","VillageProfileHome","setAuth","loading","setLoading","error","setError","checkInCookies","handleValueChance","persist","handleSubmit","preventDefault","setInCookies","colelctor","set","remove","method","onSubmit","placeholder","required","style","color","App","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.48dca802.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Home() {\n  return (\n    <div className=\"home\">\n      <div>\n        <div className=\"title\">\n          <h3>खाँडादेवी गाउँपालिका</h3>\n          <p>माकादुम , रामेछाप, प्रदेश नं ३</p>\n        </div>\n        <Link to=\"/vp-app/app\">Village Profile App</Link>\n      </div>\n    </div>\n  );\n}\n","import Dexie from \"dexie\";\nimport { IBasti } from \"./models/BastiModel\";\nimport { IHousehold } from \"./models/Household\";\nimport { IUser } from \"./models/UserModel\";\nimport { IWard } from \"./models/WardModel\";\nimport { syncDb } from \"./seed\";\n\nexport class AppDatabase extends Dexie {\n  users: Dexie.Table<IUser>;\n  wards: Dexie.Table<IWard>;\n  bastis: Dexie.Table<IBasti>;\n  households: Dexie.Table<IHousehold>;\n\n  constructor() {\n    super(\"VPDB\");\n\n    var db = this;\n    // db.delete()\n    //   .then(() => {\n    //     console.log(\"Database successfully deleted\");\n    //   })\n    //   .catch((err) => {\n    //     console.error(\"Could not delete database\");\n    //   })\n    //   .finally(() => {\n    //     // Do what should be done next...\n    //   });\n    db.version(1).stores({\n      users: \"++id, name, phone, password\",\n      wards: \"id, name, status\",\n      bastis: \"id, name, status, wardId\",\n      households: \"++id, name, phone, password, [user_id+is_posted]\",\n    });\n    db.open()\n      .then(async function (db) {\n        console.log(\"DB opened Succefully\");\n        console.log(\"Sync Complete\");\n      })\n      .catch(function (err) {\n        console.log(\"DB error\", err);\n      });\n  }\n}\nexport var db = new AppDatabase();\n","import { db } from \"../db\";\n\nexport interface IBasti {\n  id?: number;\n  name: string;\n  status: number;\n  wardId: number;\n}\nexport class Basti {\n  id: number;\n  name: string;\n  status: number;\n  wardId: number;\n\n  constructor(name: string, status: number, wardId: number, id?: number) {\n    this.name = name;\n    this.status = status;\n    this.wardId = wardId;\n    if (id) this.id = id;\n    db.bastis.mapToClass(Basti);\n  }\n  save() {\n    return db.bastis.put(this);\n  }\n}\n\nexport async function addNewBasti(data: IBasti) {\n  await db.transaction(\"rw\", db.bastis, async function () {\n    await db.bastis.add(\n      new Basti(data.name, data.status, data.wardId, data.id)\n    );\n  });\n}\n\nexport async function getAllBasti() {\n  return await db.transaction(\"r\", db.bastis, async function () {\n    let bastis = await db.bastis.toArray();\n    return bastis;\n  });\n}\n\nexport async function getBastiById(id: number) {\n  return await db.bastis.get(id);\n}\n\nexport async function getBastiByName(name: string) {\n  return await db.bastis.where('name').startsWithAnyOfIgnoreCase(name).toArray();\n}\n\nexport async function getBastiByWardId(wardId: any) {\n  return await db.bastis.where({wardId: parseInt(wardId)}).toArray();\n}\n\nexport async function updateBasti(data: IBasti) {\n  return await db.bastis.put({\n    id: data.id,\n    name: data.name,\n    status: data.status,\n    wardId: data.wardId,\n  });\n}\n","import { db } from \"../db\";\n\nexport interface IHousehold {\n  id?: number;\n  id_string?: String;\n  hoh_name?: String;\n  hoh?: String;\n  province?: String;\n  district?: String;\n  local_level?: String;\n  ward_id?: String;\n  basti_id?: String;\n  marga_id?: String;\n  religion?: String;\n  jaati?: String;\n  mother_tongue?: String;\n  main_occupation?: String;\n  has_bank_acc?: String;\n  has_cooperative_acc?: String;\n  has_garden?: String;\n  member_with_life_insurance?: String;\n  member_with_health_insurance?: String;\n  responder_name?: String;\n  house_num?: String;\n  num_of_member?: String;\n  resident_type?: String;\n  phone_num?: String;\n  mobile_num?: String;\n  longitude?: String;\n  latitude?: String;\n  geo_location?: String;\n  altitude?: String;\n  accuracy?: String;\n  responder_image?: String;\n  step?: String;\n  status?: String;\n  remarks?: String;\n  office?: String;\n  user_id?: String;\n  is_posted?: String;\n}\nexport class Household {\n  id: number;\n  hoh_name?: String;\n  hoh?: String;\n  ward_id?: String;\n  basti_id?: String;\n  marga_id?: String;\n  religion?: String;\n  jaati?: String;\n  mother_tongue?: String;\n  main_occupation?: String;\n  has_bank_acc?: String;\n  has_cooperative_acc?: String;\n  has_garden?: String;\n  member_with_life_insurance?: String;\n  member_with_health_insurance?: String;\n  responder_name?: String;\n  house_num?: String;\n  num_of_member?: String;\n  resident_type?: String;\n  phone_num?: String;\n  mobile_num?: String;\n  longitude?: String;\n  latitude?: String;\n  geo_location?: String;\n  altitude?: String;\n  accuracy?: String;\n  responder_image?: String;\n  step?: String;\n  status?: String;\n  remarks?: String;\n  user_id?: String;\n  is_posted?: String;\n\n  constructor(data: IHousehold) {\n    this.hoh_name = data.hoh_name;\n    this.hoh = data.hoh;\n    this.ward_id = data.ward_id;\n    this.basti_id = data.basti_id;\n    this.marga_id = data.marga_id;\n    this.religion = data.religion;\n    this.jaati = data.jaati;\n    this.mother_tongue = data.mother_tongue;\n    this.main_occupation = data.main_occupation;\n    this.has_bank_acc = data.has_bank_acc;\n    this.has_cooperative_acc = data.has_cooperative_acc;\n    this.has_garden = data.has_garden;\n    this.member_with_life_insurance = data.member_with_life_insurance;\n    this.member_with_health_insurance = data.member_with_health_insurance;\n    this.responder_name = data.responder_name;\n    this.house_num = data.house_num;\n    this.num_of_member = data.num_of_member;\n    this.resident_type = data.resident_type;\n    this.phone_num = data.phone_num;\n    this.mobile_num = data.mobile_num;\n    this.longitude = data.longitude;\n    this.latitude = data.latitude;\n    this.geo_location = data.geo_location;\n    this.altitude = data.altitude;\n    this.accuracy = data.accuracy;\n    this.responder_image = data.responder_image;\n    this.step = data.step;\n    this.status = data.status;\n    this.remarks = data.remarks;\n    this.user_id = data.user_id;\n    this.is_posted = data.is_posted;\n    db.households.mapToClass(Household);\n  }\n  save() {\n    return db.households.put(this);\n  }\n}\n\nexport async function addNewHousehold(data: IHousehold) {\n  await db.transaction(\"rw\", db.households, async function () {\n    await db.households.add(\n      new Household({...data})\n    );\n  });\n}\n\nexport async function getAllHousehold() {\n  return await db.transaction(\"r\", db.households, async function () {\n    let households = await db.households.toArray();\n    return households;\n  });\n}\n\nexport async function getHouseholdById(id: number) {\n  return await db.households.get(id);\n}\n\nexport async function getPendingHouseholds(user_id: string) {\n  return await db.households\n    .where(\"[user_id+is_posted]\").equals([user_id,\"0\"]).toArray();\n}\n\nexport async function updateHousehold(data: IHousehold) {\n  return await db.households.put({...data});\n}\n","import { db } from \"../db\";\n\nexport interface IWard {\n  id?: number;\n  name: string;\n  status: number;\n}\nexport class Ward {\n  id: number;\n  name: string;\n  status: number;\n\n  constructor(name: string, status: number, id?: number) {\n    this.name = name;\n    this.status = status;\n    if (id) this.id = id;\n    db.wards.mapToClass(Ward);\n  }\n  save() {\n    return db.wards.put(this);\n  }\n}\n\nexport async function addNewWard(data: IWard) {\n  await db.transaction(\"rw\", db.wards, async function () {\n    let ward = await db.wards.add(\n      new Ward(data.name, data.status, data.id)\n    );\n    console.log(ward);\n  });\n}\n\nexport async function getAllWards() {\n  return await db.transaction(\"r\", db.wards, async function () {\n    let wards = await db.wards.toArray();\n    return wards;\n  });\n}\n\nexport async function getWardById(id: number) {\n  return await db.wards.get(id);\n}\n\nexport async function getWardByName(name: string) {\n  return await db.wards.where('name').startsWithAnyOfIgnoreCase(name).toArray();\n}\n\nexport async function updateWard(data: IWard) {\n  return await db.wards.put({\n    id: data.id,\n    name: data.name,\n    status: data.status,\n  });\n}\n","import { IBasti } from \"../../../db/models/BastiModel\";\nimport { IWard } from \"../../../db/models/WardModel\";\n\nexport default function GharKoBiabarn(props: any) {\n  let { data, bastis, wards, household } = props;\n  let { handleChange } = props;\n\n  const checkRequired = (id: number) => {\n    let requiredFields = data?.requiredFields || [];\n    return requiredFields.indexOf(id) > -1;\n  };\n  return (\n    <div className=\"vp-form\">\n      <div\n        className={`form-group ${data && checkRequired(1) ? \"required\" : \"\"}`}\n        id=\"1\"\n      >\n        <label className=\"label\">1. Ward No</label>\n        <div className=\"options-verical\" onChange={(e) => handleChange(e)}>\n          {wards.map((w: IWard, key: any) => (\n            <div className=\"radio\" key={key}>\n              <label>\n                {household.ward_id == w.id ? (\n                  <input type=\"radio\" value={w.id} name=\"ward_id\" defaultChecked/>\n                ) : (\n                  <input type=\"radio\" value={w.id} name=\"ward_id\" />\n                )}\n                {w.name}\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div\n        className={`form-group ${data && checkRequired(2) ? \"required\" : \"\"}`}\n        id=\"2\"\n      >\n        <label className=\"label\">2. Basti ko Naam</label>\n        <div className=\"options-verical\" onChange={(e) => handleChange(e)}>\n          {bastis.map((b: IBasti, key: any) => (\n            <div className=\"radio\" key={key}>\n              <label>\n                <input type=\"radio\" value={b.id} name=\"basti_id\" />\n                {b.name}\n              </label>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport { getBastiByWardId, IBasti } from \"../../db/models/BastiModel\";\nimport {\n  addNewHousehold,\n  getAllHousehold,\n  IHousehold,\n} from \"../../db/models/Household\";\nimport { getAllWards, IWard } from \"../../db/models/WardModel\";\nimport GharKoBiabarn from \"./Forms/GharKoBiabarn\";\nconst requiredFields = [1, 2];\nconst cookies = new Cookies();\n\nexport default function AddNewData(props: any) {\n  // To edit send data.household\n  const history = useHistory();\n  let { data } = props;\n  let auth = cookies.get(\"auth\");\n  const [wards, setWards] = useState([] as IWard[]);\n  const [bastis, setBastis] = useState([] as IBasti[]);\n  const [household, setHousehold] = useState({\n    ...data.household,\n  } as IHousehold);\n  data.requiredFields = requiredFields;\n  useEffect(() => {\n    loadAllWada();\n  }, []);\n  async function loadAllWada() {\n    let wards = await getAllWards();\n    setWards([...wards]);\n  }\n\n  const saveHousehold = async () => {\n    await addNewHousehold({\n      ...household,\n      status: \"0\",\n      is_posted: \"0\",\n      user_id: auth.id,\n    });\n    history.push(\"/vp-app/app\");\n  };\n\n  const loadBastiByWadaId = async (e: any) => {\n    let wardId = e.target.value;\n    let bastis = await getBastiByWardId(wardId);\n    setBastis([...bastis]);\n  };\n\n  const handleChange = (e: any) => {\n    if (e.target.name === \"ward_id\") {\n      loadBastiByWadaId(e);\n    }\n    setHousehold((household) => ({\n      ...household,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  return (\n    <div className=\"vp-form-wrapper\">\n      <div className=\"save-btns\">\n        <button onClick={saveHousehold}>Save</button>\n        <button>Save & Exit</button>\n      </div>\n      <GharKoBiabarn\n        data={data}\n        household={household}\n        handleChange={handleChange}\n        wards={wards}\n        bastis={bastis}\n      />\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport { IUser } from \"../db/models/UserModel\";\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\nconst server = `${process.env.REACT_APP_SERVER}/api/`;\nconst api = {\n  loadCollectors: () => axios.get(`${server}collectors/`),\n  loadWada: (office_id: String) => axios.get(`${server}wards/`, {params: {office_id: office_id}}),\n  loadMarga: (office_id: String) => axios.get(`${server}margas/`, {params: {office_id: office_id}}),\n  loadBasti: (office_id: String) => axios.get(`${server}bastis/`, {params: {office_id: office_id}}),\n  login: (auth: IUser) => axios.post(`${server}login/`, { data: auth }),\n  \n  postHousehold: (data: any) => axios.post(`${server}post-household/`, { data }),\n};\n\nexport default api;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport api from \"../../Api/api\";\nimport {\n  getAllHousehold,\n  getPendingHouseholds,\n  IHousehold,\n  updateHousehold,\n} from \"../../db/models/Household\";\nconst cookies = new Cookies();\n\nexport default function AllData() {\n  const [households, setHousholds] = useState([] as IHousehold[]);\n  let auth = cookies.get(\"auth\");\n  const history = useHistory();\n\n  useEffect(() => {\n    getHouseholds();\n  }, []);\n\n  const getHouseholds = async () => {\n    let hhs = await getPendingHouseholds(auth.id);\n    setHousholds([...hhs]);\n  };\n\n  const postHousehold = async (hh: any) => {\n    let res = await api.postHousehold(hh);\n    if (res.status === 200) {\n      let local_hh = await updateHousehold({ ...hh, is_posted: 1 });\n      console.log(local_hh);\n    } else {\n      console.log(hh.id, \"Failed\");\n    }\n    getHouseholds();\n  };\n  return (\n    <div>\n      <button\n        className=\"btn btn-warning\"\n        onClick={() => history.push(\"/vp-app/app\")}\n      >\n        Back\n      </button>\n      <table className=\"table table-striped table-bordered table-hover\">\n        <thead>\n          <tr>\n            <th>SN</th>\n            <th>Household Id</th>\n            <th>Ward</th>\n            <th>Posted</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {households.length ? (\n            households.map((hh, key) => (\n              <tr key={key}>\n                <td>{++key}</td>\n                <td>{hh.id}</td>\n                <td>{hh.ward_id}</td>\n                <td>\n                  {hh.is_posted == \"1\" ? (\n                    <label className=\"badge badge-success\">YES</label>\n                  ) : (\n                    <label className=\"badge badge-danger\">NO</label>\n                  )}\n                </td>\n                <td>\n                  {hh.is_posted == \"0\" && (\n                    <>\n                      <button\n                        className=\"btn btn-warning\"\n                        onClick={() => postHousehold(hh)}\n                      >\n                        Edit\n                      </button>\n                      <button\n                        className=\"btn btn-primary\"\n                        onClick={() => postHousehold(hh)}\n                      >\n                        Post\n                      </button>\n                    </>\n                  )}\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td>No Data</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import Cookies from \"universal-cookie\";\nimport api from \"../Api/api\";\nimport { addNewBasti, getBastiByName } from \"./models/BastiModel\";\nimport { addNewWard, getWardByName } from \"./models/WardModel\";\n\nconst cookies = new Cookies();\nlet auth = cookies.get(\"auth\");\n\nexport async function getWadas(office_id: String) {\n  console.log(\"Synchronizing Wards...\");\n  let res = await api.loadWada(office_id);\n  if (res.status === 200) {\n    let wards = res.data;\n    wards.map(async (w: any) => {\n      let checkWard = await getWardByName(w.name);\n      if (checkWard.length === 0) {\n        await addNewWard({ name: w.name, status: w.status, id: w.id });\n      }\n    });\n    console.log(wards.length, \" Wards Synced.\");\n    return wards;\n  }\n  return null;\n}\n\nexport async function getBastis(office_id: String) {\n  console.log(\"Synchronizing Basti...\");\n  let res = await api.loadBasti(office_id);\n    if (res.status === 200) {\n      let basti = res.data;\n      basti.map(async (w: any) => {\n        let checkWard = await getBastiByName(w.name);\n        if (checkWard.length === 0) {\n          await addNewBasti({ name: w.name, status: w.status, id: w.id, wardId: w.ward_id });\n        }\n      });\n      console.log(basti.length , \" Bastis Synced.\")\n    }\n}\n\nexport async function syncDb(data: any) {\n  if (window.navigator.onLine) {\n    await getWadas(data.office_id);\n    await getBastis(data.office_id);\n  }\n}\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport { IUser } from \"../db/models/UserModel\";\nimport api from \"../Api/api\";\nimport { syncDb } from \"../db/seed\";\n\nconst cookies = new Cookies();\nconst initialAuth = {\n  name: \"\",\n  username: \"\",\n  phone: \"\",\n  password: \"\",\n  office_name: \"\",\n  office_id: \"\",\n} as IUser;\nexport default function VillageProfileHome() {\n  const [auth, setAuth] = useState(initialAuth as IUser);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    checkInCookies();\n    // loadAllCollectors();\n  }, []);\n  // async function syncDbWithServer() {\n  //   if (window.navigator.onLine) {\n  //     setLoad ing(true);\n  //     syncDb();\n  //     setLoading(false);\n  //   }\n  // }\n  // async function createUser(data: IUser) {\n  //   await addNewUser(data);\n  // }\n\n  // async function getUsers() {\n  //   let users = await getAllUsers();\n  //   console.log(users);\n  // }\n\n  // async function getById(id: number) {\n  //   let user = await getUserById(id);\n  //   console.log(user);\n  // }\n\n  // async function updateUserModel(data: IUser) {\n  //   let user = await updateUser(data);\n  //   console.log(user);\n  // }\n\n\n  const handleValueChance = (e: any) => {\n    e.persist();\n    setAuth((auth) => ({\n      ...auth,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    setLoading(true);\n    let res = await api.login(auth);\n    if (res.data) {\n      let data = res.data;\n      setAuth((auth) => ({\n        ...auth,\n        id: data?.id ? data?.id : initialAuth.id,\n        name: data?.name ? data?.name : \"\",\n        office_name: data?.office_name\n          ? data?.office_name\n          : initialAuth.office_name,\n        office_id: data?.office_id ? data?.office_id : initialAuth.office_id,\n      }));\n      setInCookies(data);\n      await syncDb(data)\n    } else {\n      setError(\"Phone or Password did not match!\");\n    }\n    setLoading(false);\n  };\n\n  const checkInCookies = () => {\n    let auth = cookies.get(\"auth\");\n    if (auth) {\n      setAuth({ ...auth });\n    }\n  };\n  const setInCookies = (colelctor: IUser) => {\n    cookies.set(\"auth\", colelctor);\n  };\n  const clearCookies = () => {\n    cookies.remove(\"auth\");\n  };\n\n  const logout = () => {\n    setAuth({ ...initialAuth });\n    clearCookies();\n  };\n  console.log(auth);\n\n  if (loading) {\n    return <div className=\"vp-home\">Loading...</div>;\n  }\n  if (!auth.id) {\n    return (\n      <div className=\"vp-home\">\n        <form method=\"post\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Username</label>\n            <input\n              type=\"username\"\n              placeholder=\"Username\"\n              name=\"username\"\n              value={auth?.username}\n              onChange={handleValueChance}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              value={auth?.password}\n              onChange={handleValueChance}\n              required\n            />\n          </div>\n          <p style={{ color: \"red\" }}>{error}</p>\n          <button>Submit</button>\n        </form>\n      </div>\n    );\n  }\n  return (\n    <div className=\"vp-home\">\n      <div className=\"welcome\">\n        Welcome <br />\n        {auth?.name}\n        <p className=\"logout\" onClick={logout}>\n          Logout\n        </p>\n      </div>\n      <Link to=\"/vp-app/app/add-new\">Add New Household</Link>\n      <Link to=\"/vp-app/app/pending\">Pending Data</Link>\n      <Link to=\"/vp-app/app/incomplete\">Incomplete Data</Link>\n      <Link to=\"/vp-app/app/all\">All Data</Link>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport api from \"../../Api/api\";\nimport {\n  getAllHousehold,\n  getPendingHouseholds,\n  IHousehold,\n  updateHousehold,\n} from \"../../db/models/Household\";\nconst cookies = new Cookies();\n\nexport default function AllData() {\n  const [households, setHousholds] = useState([] as IHousehold[]);\n  let auth = cookies.get(\"auth\");\n  const history = useHistory();\n\n  useEffect(() => {\n    getHouseholds();\n  }, []);\n\n  const getHouseholds = async () => {\n    let hhs = await getAllHousehold();\n    console.log(hhs);\n    setHousholds([...hhs]);\n  };\n\n  const postHousehold = async (hh: any) => {\n    let res = await api.postHousehold(hh);\n    if (res.status === 200) {\n      let local_hh = await updateHousehold({ ...hh, is_posted: 1 });\n      console.log(local_hh);\n    } else {\n      console.log(hh.id, \"Failed\");\n    }\n    getHouseholds();\n  };\n  return (\n    <div>\n      <button\n        className=\"btn btn-warning\"\n        onClick={() => history.push(\"/vp-app/app\")}\n      >\n        Back\n      </button>\n      <table className=\"table table-striped table-bordered table-hover\">\n        <thead>\n          <tr>\n            <th>SN</th>\n            <th>Household Id</th>\n            <th>Ward</th>\n            <th>Posted</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {households.length ? (\n            households.map((hh, key) => (\n              <tr key={key}>\n                <td>{++key}</td>\n                <td>{hh.id}</td>\n                <td>{hh.ward_id}</td>\n                <td>\n                  {hh.is_posted == \"1\" ? (\n                    <label className=\"badge badge-success\">YES</label>\n                  ) : (\n                    <label className=\"badge badge-danger\">NO</label>\n                  )}\n                </td>\n                <td>\n                  {hh.is_posted == \"0\" && (\n                    <>\n                      <button\n                        className=\"btn btn-warning\"\n                        onClick={() => postHousehold(hh)}\n                      >\n                        Edit\n                      </button>\n                      <button\n                        className=\"btn btn-primary\"\n                        onClick={() => postHousehold(hh)}\n                      >\n                        Post\n                      </button>\n                    </>\n                  )}\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td>No Data</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport AddNewData from \"./Components/VillageProfile/AddNewData\";\nimport PendingData from \"./Components/VillageProfile/PendingData\";\nimport VillageProfileHome from \"./Components/VillageProfileHome\";\nimport \"./App.css\"\nimport { db } from \"./db/db\";\nimport AllData from \"./Components/VillageProfile/AllData\";\n\nexport default function App() {\n  db.open();\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/vp-app/app/add-new\">\n          <AddNewData data={{}} />\n        </Route>\n        <Route path=\"/vp-app/app/pending\">\n          <PendingData />\n        </Route>\n        <Route path=\"/vp-app/app/all\">\n          <AllData />\n        </Route>\n        <Route path=\"/vp-app/app\">\n          <VillageProfileHome />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/vp-app\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n"],"sourceRoot":""}